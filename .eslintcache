[{"/Users/bevonbrye/ag-commerce/src/App.js":"1","/Users/bevonbrye/ag-commerce/src/index.js":"2","/Users/bevonbrye/ag-commerce/src/components/Products/Products.js":"3","/Users/bevonbrye/ag-commerce/src/components/Products/styles.js":"4","/Users/bevonbrye/ag-commerce/src/components/Products/Product/Product.js":"5","/Users/bevonbrye/ag-commerce/src/components/Products/Product/styles.js":"6","/Users/bevonbrye/ag-commerce/src/components/Navbar/Navbar.js":"7","/Users/bevonbrye/ag-commerce/src/components/Navbar/styles.js":"8","/Users/bevonbrye/ag-commerce/src/lib/commerce.js":"9","/Users/bevonbrye/ag-commerce/src/components/Cart/Cart.js":"10","/Users/bevonbrye/ag-commerce/src/components/Cart/styles.js":"11","/Users/bevonbrye/ag-commerce/src/components/Cart/CartItem/CartItem.js":"12","/Users/bevonbrye/ag-commerce/src/components/Cart/CartItem/styles.js":"13","/Users/bevonbrye/ag-commerce/src/components/CheckoutForm/Checkout/Checkout.js":"14","/Users/bevonbrye/ag-commerce/src/components/CheckoutForm/Checkout/styles.js":"15","/Users/bevonbrye/ag-commerce/src/components/CheckoutForm/AddressForm.js":"16","/Users/bevonbrye/ag-commerce/src/components/CheckoutForm/PaymentForm.js":"17","/Users/bevonbrye/ag-commerce/src/components/CheckoutForm/CustomTextField.js":"18"},{"size":3035,"mtime":1611949318281,"results":"19","hashOfConfig":"20"},{"size":149,"mtime":1611267808922,"results":"21","hashOfConfig":"20"},{"size":616,"mtime":1611361743638,"results":"22","hashOfConfig":"20"},{"size":286,"mtime":1611272934230,"results":"23","hashOfConfig":"20"},{"size":1195,"mtime":1611362096353,"results":"24","hashOfConfig":"20"},{"size":395,"mtime":1611268103423,"results":"25","hashOfConfig":"20"},{"size":1263,"mtime":1611949548060,"results":"26","hashOfConfig":"20"},{"size":1588,"mtime":1611272896391,"results":"27","hashOfConfig":"20"},{"size":140,"mtime":1611328981761,"results":"28","hashOfConfig":"20"},{"size":1758,"mtime":1611767271387,"results":"29","hashOfConfig":"20"},{"size":569,"mtime":1611423257823,"results":"30","hashOfConfig":"20"},{"size":1399,"mtime":1611772788049,"results":"31","hashOfConfig":"20"},{"size":332,"mtime":1611423580905,"results":"32","hashOfConfig":"20"},{"size":3113,"mtime":1611855830451,"results":"33","hashOfConfig":"20"},{"size":1157,"mtime":1611854886513,"results":"34","hashOfConfig":"20"},{"size":4590,"mtime":1611855206533,"results":"35","hashOfConfig":"20"},{"size":2413,"mtime":1611855955393,"results":"36","hashOfConfig":"20"},{"size":532,"mtime":1611855832797,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"ky6t3x",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/bevonbrye/ag-commerce/src/App.js",[],["78","79"],"/Users/bevonbrye/ag-commerce/src/index.js",[],"/Users/bevonbrye/ag-commerce/src/components/Products/Products.js",[],"/Users/bevonbrye/ag-commerce/src/components/Products/styles.js",[],"/Users/bevonbrye/ag-commerce/src/components/Products/Product/Product.js",[],"/Users/bevonbrye/ag-commerce/src/components/Products/Product/styles.js",[],"/Users/bevonbrye/ag-commerce/src/components/Navbar/Navbar.js",[],"/Users/bevonbrye/ag-commerce/src/components/Navbar/styles.js",[],"/Users/bevonbrye/ag-commerce/src/lib/commerce.js",[],"/Users/bevonbrye/ag-commerce/src/components/Cart/Cart.js",[],"/Users/bevonbrye/ag-commerce/src/components/Cart/styles.js",[],"/Users/bevonbrye/ag-commerce/src/components/Cart/CartItem/CartItem.js",[],"/Users/bevonbrye/ag-commerce/src/components/Cart/CartItem/styles.js",[],["80","81"],"/Users/bevonbrye/ag-commerce/src/components/CheckoutForm/Checkout/Checkout.js",["82"],"import React, { useState, useEffect } from 'react';\nimport { CssBaseline, Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { commerce } from '../../../lib/commerce';\nimport AddressForm from '../AddressForm';\nimport PaymentForm from '../PaymentForm';\nimport useStyles from './styles';\n\nconst steps = ['Shipping address', 'Payment details'];\n\nconst Checkout = ({ cart, onCaptureCheckout, order, error }) => {\n  const [checkoutToken, setCheckoutToken] = useState(null);\n  const [activeStep, setActiveStep] = useState(0);\n  const [shippingData, setShippingData] = useState({});\n  const classes = useStyles();\n  const history = useHistory();\n\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n\n  useEffect(() => {\n    if (cart.id) {\n      const generateToken = async () => {\n        try {\n          const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\n\n          setCheckoutToken(token);\n        } catch {\n          if (activeStep !== steps.length) history.push('/');\n        }\n      };\n\n      generateToken();\n    }\n  }, [cart]);\n\n  const test = (data) => {\n    setShippingData(data);\n\n    nextStep();\n  };\n\n  let Confirmation = () => (order.customer ? (\n    <>\n      <div>\n        <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\n        <Divider className={classes.divider} />\n        <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\n      </div>\n      <br />\n      <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n    </>\n  ) : (\n    <div className={classes.spinner}>\n      <CircularProgress />\n    </div>\n  ));\n  if (error) {\n    Confirmation = () => (\n      <>\n        <Typography variant=\"h5\">Error: {error}</Typography>\n        <br />\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n      </>\n    );\n  }\n  const Form = () => (activeStep === 0\n    ? <AddressForm checkoutToken={checkoutToken} nextStep={nextStep} setShippingData={setShippingData} test={test} />\n    : <PaymentForm checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} shippingData={shippingData} onCaptureCheckout={onCaptureCheckout} />);\n  return (\n    <>\n      <CssBaseline />\n      <div className={classes.toolbar} />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\n        </Paper>\n      </main>\n    </>\n  );\n};\nexport default Checkout;\n","/Users/bevonbrye/ag-commerce/src/components/CheckoutForm/Checkout/styles.js",[],"/Users/bevonbrye/ag-commerce/src/components/CheckoutForm/AddressForm.js",["83","84"],"import React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nimport { commerce } from '../../lib/commerce';\nimport FormInput from './CustomTextField';\n\nconst AddressForm = ({ checkoutToken, test }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n  const methods = useForm();\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\n\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n  }, [shippingSubdivision]);\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\n      <FormProvider {...methods}>\n        <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\n          <Grid container spacing={3}>\n            <FormInput required name=\"firstName\" label=\"First name\" />\n            <FormInput required name=\"lastName\" label=\"Last name\" />\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\n            <FormInput required name=\"email\" label=\"Email\" />\n            <FormInput required name=\"city\" label=\"City\" />\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\nexport default AddressForm;","/Users/bevonbrye/ag-commerce/src/components/CheckoutForm/PaymentForm.js",[],"/Users/bevonbrye/ag-commerce/src/components/CheckoutForm/CustomTextField.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"85","replacedBy":"89"},{"ruleId":"87","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":36,"column":6,"nodeType":"93","endLine":36,"endColumn":12,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":41,"column":6,"nodeType":"93","endLine":41,"endColumn":8,"suggestions":"96"},{"ruleId":"91","severity":1,"message":"97","line":49,"column":6,"nodeType":"93","endLine":49,"endColumn":27,"suggestions":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],["99"],["100"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["101"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["102"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"110","text":"111"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"112","text":"113"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"114","text":"115"},[1273,1279],"[activeStep, cart, history]",[1668,1670],"[checkoutToken.id]",[1913,1934],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]